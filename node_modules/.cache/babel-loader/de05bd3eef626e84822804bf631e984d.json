{"remainingRequest":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/babel-loader/lib/index.js!/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philfranks/Documents/trello/watch-us-build-trello/src/views/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/src/views/Board.vue","mtime":1601943170641},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/cache-loader/dist/cjs.js","mtime":1601916654944},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/babel-loader/lib/index.js","mtime":1601916612286},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/cache-loader/dist/cjs.js","mtime":1601916654944},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/vue-loader/lib/index.js","mtime":1601916655844}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport BoardColumn from '@/components/BoardColumn';\nexport default {\n  components: {\n    BoardColumn: BoardColumn\n  },\n  data: function data() {\n    return {\n      newColumnName: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(['board']), {\n    isTaskOpen: function isTaskOpen() {\n      return this.$route.name === 'task';\n    }\n  }),\n  methods: {\n    close: function close() {\n      this.$router.push({\n        name: 'board'\n      });\n    },\n    createColumn: function createColumn() {\n      this.$store.commit('CREATE_COLUMN', {\n        name: this.newColumnName\n      });\n      this.newColumnName = '';\n    }\n  }\n};",{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,OAAA,CAAA,CADA;AAEA,IAAA,UAFA,wBAEA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA,KAAA,MAAA;AACA;AAJA,IAPA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA;AADA,OAAA;AAIA,WAAA,aAAA,GAAA,EAAA;AACA;AAVA;AAbA,CAAA","sourcesContent":["<template>\n  <div class=\"board\">\n    <div class=\"flex flex-row items-start\">\n      <BoardColumn\n        v-for=\"(column, $columnIndex) of board.columns\"\n        :key=\"$columnIndex\"\n        :column=\"column\"\n        :columnIndex=\"$columnIndex\"\n        :board=\"board\"\n      />\n\n      <div class=\"column flex\">\n        <input\n          type=\"text\"\n          class=\"p-2 mr-2 flex-grow\"\n          placeholder=\"New Column Name\"\n          v-model=\"newColumnName\"\n          @keyup.enter=\"createColumn\"\n        >\n      </div>\n    </div>\n\n    <div\n      class=\"task-bg\"\n      v-if=\"isTaskOpen\"\n      @click.self=\"close\"\n    >\n      <router-view/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport BoardColumn from '@/components/BoardColumn'\n\nexport default {\n  components: { BoardColumn },\n  data () {\n    return {\n      newColumnName: ''\n    }\n  },\n  computed: {\n    ...mapState(['board']),\n    isTaskOpen () {\n      return this.$route.name === 'task'\n    }\n  },\n  methods: {\n    close () {\n      this.$router.push({ name: 'board' })\n    },\n    createColumn () {\n      this.$store.commit('CREATE_COLUMN', {\n        name: this.newColumnName\n      })\n\n      this.newColumnName = ''\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.board {\n  @apply p-4 bg-teal-dark h-full overflow-auto;\n}\n\n.task-bg {\n  @apply pin absolute;\n  background: rgba(0,0,0,0.5);\n}\n</style>\n"],"sourceRoot":"src/views"}]}