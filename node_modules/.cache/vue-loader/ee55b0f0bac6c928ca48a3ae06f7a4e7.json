{"remainingRequest":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philfranks/Documents/trello/watch-us-build-trello/src/components/BoardColumn.vue?vue&type=template&id=36d259dc&","dependencies":[{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/src/components/BoardColumn.vue","mtime":1601943170640},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/cache-loader/dist/cjs.js","mtime":1601916654944},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1601916655844},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/cache-loader/dist/cjs.js","mtime":1601916654944},{"path":"/Users/philfranks/Documents/trello/watch-us-build-trello/node_modules/vue-loader/lib/index.js","mtime":1601916655844}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"AppDrop\",\n    { on: { drop: _vm.moveTaskOrColumn } },\n    [\n      _c(\n        \"AppDrag\",\n        {\n          staticClass: \"column\",\n          attrs: {\n            transferData: {\n              type: \"column\",\n              fromColumnIndex: _vm.columnIndex\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"flex items-center mb-2 font-bold\" }, [\n            _vm._v(\"\\n      \" + _vm._s(_vm.column.name) + \"\\n    \")\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"list-reset\" },\n            [\n              _vm._l(_vm.column.tasks, function(task, $taskIndex) {\n                return _c(\"ColumnTask\", {\n                  key: $taskIndex,\n                  attrs: {\n                    task: task,\n                    taskIndex: $taskIndex,\n                    column: _vm.column,\n                    columnIndex: _vm.columnIndex,\n                    board: _vm.board\n                  }\n                })\n              }),\n              _c(\"input\", {\n                staticClass: \"block p-2 w-full bg-transparent\",\n                attrs: { type: \"text\", placeholder: \"+ Enter new task\" },\n                on: {\n                  keyup: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.createTask($event, _vm.column.tasks)\n                  }\n                }\n              })\n            ],\n            2\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}